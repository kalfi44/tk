Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> instrlist
Rule 2     instrlist -> instrlist instruction
Rule 3     instrlist -> instruction
Rule 4     instruction -> printinstr ;
Rule 5     instruction -> assignmentlist
Rule 6     instruction -> ifinstr
Rule 7     instruction -> continueinstr ;
Rule 8     instruction -> theninstr ;
Rule 9     instruction -> whileinstr
Rule 10    instruction -> forinstr
Rule 11    instruction -> returninstr ;
Rule 12    instruction -> breakinstr ;
Rule 13    assignmentlist -> assignmentlist assignment
Rule 14    assignmentlist -> assignment
Rule 15    assignment -> ID = expression ;
Rule 16    assignment -> ID ADDASSIGN expression ;
Rule 17    assignment -> ID SUBASSIGN expression ;
Rule 18    assignment -> ID MULASSIGN expression ;
Rule 19    assignment -> ID DIVASSIGN expression ;
Rule 20    assignment -> ID [ INTNUM , INTNUM ] = value ;
Rule 21    ifinstr -> IF ( condition ) groupedinstr
Rule 22    ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr
Rule 23    whileinstr -> WHILE ( condition ) groupedinstr
Rule 24    forinstr -> FOR range groupedinstr
Rule 25    groupedinstr -> { instrlist }
Rule 26    groupedinstr -> instruction
Rule 27    returninstr -> RETURN expression
Rule 28    printinstr -> PRINT expression
Rule 29    breakinstr -> BREAK
Rule 30    continueinstr -> CONTINUE
Rule 31    theninstr -> THEN
Rule 32    matrix -> [ matrixline ]
Rule 33    matrixline -> matrixline ; valuelist
Rule 34    matrixline -> valuelist
Rule 35    expression -> ID
Rule 36    expression -> condition
Rule 37    expression -> matrix
Rule 38    expression -> valuelist
Rule 39    expression -> matrixfunction
Rule 40    expression -> - expression
Rule 41    expression -> expression '
Rule 42    expression -> ( expression )
Rule 43    expression -> expression + expression
Rule 44    expression -> expression - expression
Rule 45    expression -> expression * expression
Rule 46    expression -> expression / expression
Rule 47    expression -> expression DOTADD expression
Rule 48    expression -> expression DOTSUB expression
Rule 49    expression -> expression DOTMUL expression
Rule 50    expression -> expression DOTDIV expression
Rule 51    condition -> expression GREATEREQUAL expression
Rule 52    condition -> expression LOWEREQUAL expression
Rule 53    condition -> expression NOTEQUAL expression
Rule 54    condition -> expression EQUAL expression
Rule 55    condition -> expression < expression
Rule 56    condition -> expression > expression
Rule 57    range -> ID = INTNUM : INTNUM
Rule 58    valuelist -> valuelist , value
Rule 59    valuelist -> value
Rule 60    matrixfunction -> ZEROES ( INTNUM )
Rule 61    matrixfunction -> ONES ( INTNUM )
Rule 62    matrixfunction -> EYE ( INTNUM )
Rule 63    value -> STRING
Rule 64    value -> INTNUM
Rule 65    value -> FLOATNUM

Terminals, with rules where they appear

'                    : 41
(                    : 21 22 23 42 60 61 62
)                    : 21 22 23 42 60 61 62
*                    : 45
+                    : 43
,                    : 20 58
-                    : 40 44
/                    : 46
:                    : 57
;                    : 4 7 8 11 12 15 16 17 18 19 20 33
<                    : 55
=                    : 15 20 57
>                    : 56
ADDASSIGN            : 16
BREAK                : 29
COMMENT              : 
CONTINUE             : 30
DIVASSIGN            : 19
DOTADD               : 47
DOTDIV               : 50
DOTMUL               : 49
DOTSUB               : 48
ELSE                 : 22
EQUAL                : 54
EYE                  : 62
FLOATNUM             : 65
FOR                  : 24
GREATEREQUAL         : 51
ID                   : 15 16 17 18 19 20 35 57
IF                   : 21 22
INTNUM               : 20 20 57 57 60 61 62 64
LOWEREQUAL           : 52
MULASSIGN            : 18
NOTEQUAL             : 53
ONES                 : 61
PRINT                : 28
RETURN               : 27
STRING               : 63
SUBASSIGN            : 17
THEN                 : 31
WHILE                : 23
ZEROES               : 60
[                    : 20 32
]                    : 20 32
error                : 
{                    : 25
}                    : 25

Nonterminals, with rules where they appear

assignment           : 13 14
assignmentlist       : 5 13
breakinstr           : 12
condition            : 21 22 23 36
continueinstr        : 7
expression           : 15 16 17 18 19 27 28 40 41 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56
forinstr             : 10
groupedinstr         : 21 22 22 23 24
ifinstr              : 6
instrlist            : 1 2 25
instruction          : 2 3 26
matrix               : 37
matrixfunction       : 39
matrixline           : 32 33
printinstr           : 4
program              : 0
range                : 24
returninstr          : 11
theninstr            : 8
value                : 20 58 59
valuelist            : 33 34 38 58
whileinstr           : 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instrlist
    (2) instrlist -> . instrlist instruction
    (3) instrlist -> . instruction
    (4) instruction -> . printinstr ;
    (5) instruction -> . assignmentlist
    (6) instruction -> . ifinstr
    (7) instruction -> . continueinstr ;
    (8) instruction -> . theninstr ;
    (9) instruction -> . whileinstr
    (10) instruction -> . forinstr
    (11) instruction -> . returninstr ;
    (12) instruction -> . breakinstr ;
    (28) printinstr -> . PRINT expression
    (13) assignmentlist -> . assignmentlist assignment
    (14) assignmentlist -> . assignment
    (21) ifinstr -> . IF ( condition ) groupedinstr
    (22) ifinstr -> . IF ( condition ) groupedinstr ELSE groupedinstr
    (30) continueinstr -> . CONTINUE
    (31) theninstr -> . THEN
    (23) whileinstr -> . WHILE ( condition ) groupedinstr
    (24) forinstr -> . FOR range groupedinstr
    (27) returninstr -> . RETURN expression
    (29) breakinstr -> . BREAK
    (15) assignment -> . ID = expression ;
    (16) assignment -> . ID ADDASSIGN expression ;
    (17) assignment -> . ID SUBASSIGN expression ;
    (18) assignment -> . ID MULASSIGN expression ;
    (19) assignment -> . ID DIVASSIGN expression ;
    (20) assignment -> . ID [ INTNUM , INTNUM ] = value ;

    PRINT           shift and go to state 13
    IF              shift and go to state 15
    CONTINUE        shift and go to state 16
    THEN            shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21
    ID              shift and go to state 22

    program                        shift and go to state 1
    instrlist                      shift and go to state 2
    instruction                    shift and go to state 3
    printinstr                     shift and go to state 4
    assignmentlist                 shift and go to state 5
    ifinstr                        shift and go to state 6
    continueinstr                  shift and go to state 7
    theninstr                      shift and go to state 8
    whileinstr                     shift and go to state 9
    forinstr                       shift and go to state 10
    returninstr                    shift and go to state 11
    breakinstr                     shift and go to state 12
    assignment                     shift and go to state 14

state 1

    (0) S' -> program .



state 2

    (1) program -> instrlist .
    (2) instrlist -> instrlist . instruction
    (4) instruction -> . printinstr ;
    (5) instruction -> . assignmentlist
    (6) instruction -> . ifinstr
    (7) instruction -> . continueinstr ;
    (8) instruction -> . theninstr ;
    (9) instruction -> . whileinstr
    (10) instruction -> . forinstr
    (11) instruction -> . returninstr ;
    (12) instruction -> . breakinstr ;
    (28) printinstr -> . PRINT expression
    (13) assignmentlist -> . assignmentlist assignment
    (14) assignmentlist -> . assignment
    (21) ifinstr -> . IF ( condition ) groupedinstr
    (22) ifinstr -> . IF ( condition ) groupedinstr ELSE groupedinstr
    (30) continueinstr -> . CONTINUE
    (31) theninstr -> . THEN
    (23) whileinstr -> . WHILE ( condition ) groupedinstr
    (24) forinstr -> . FOR range groupedinstr
    (27) returninstr -> . RETURN expression
    (29) breakinstr -> . BREAK
    (15) assignment -> . ID = expression ;
    (16) assignment -> . ID ADDASSIGN expression ;
    (17) assignment -> . ID SUBASSIGN expression ;
    (18) assignment -> . ID MULASSIGN expression ;
    (19) assignment -> . ID DIVASSIGN expression ;
    (20) assignment -> . ID [ INTNUM , INTNUM ] = value ;

    $end            reduce using rule 1 (program -> instrlist .)
    PRINT           shift and go to state 13
    IF              shift and go to state 15
    CONTINUE        shift and go to state 16
    THEN            shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21
    ID              shift and go to state 22

    instruction                    shift and go to state 23
    printinstr                     shift and go to state 4
    assignmentlist                 shift and go to state 5
    ifinstr                        shift and go to state 6
    continueinstr                  shift and go to state 7
    theninstr                      shift and go to state 8
    whileinstr                     shift and go to state 9
    forinstr                       shift and go to state 10
    returninstr                    shift and go to state 11
    breakinstr                     shift and go to state 12
    assignment                     shift and go to state 14

state 3

    (3) instrlist -> instruction .

    PRINT           reduce using rule 3 (instrlist -> instruction .)
    IF              reduce using rule 3 (instrlist -> instruction .)
    CONTINUE        reduce using rule 3 (instrlist -> instruction .)
    THEN            reduce using rule 3 (instrlist -> instruction .)
    WHILE           reduce using rule 3 (instrlist -> instruction .)
    FOR             reduce using rule 3 (instrlist -> instruction .)
    RETURN          reduce using rule 3 (instrlist -> instruction .)
    BREAK           reduce using rule 3 (instrlist -> instruction .)
    ID              reduce using rule 3 (instrlist -> instruction .)
    $end            reduce using rule 3 (instrlist -> instruction .)
    }               reduce using rule 3 (instrlist -> instruction .)


state 4

    (4) instruction -> printinstr . ;

    ;               shift and go to state 24


state 5

    (5) instruction -> assignmentlist .
    (13) assignmentlist -> assignmentlist . assignment
    (15) assignment -> . ID = expression ;
    (16) assignment -> . ID ADDASSIGN expression ;
    (17) assignment -> . ID SUBASSIGN expression ;
    (18) assignment -> . ID MULASSIGN expression ;
    (19) assignment -> . ID DIVASSIGN expression ;
    (20) assignment -> . ID [ INTNUM , INTNUM ] = value ;

  ! shift/reduce conflict for ID resolved as shift
    PRINT           reduce using rule 5 (instruction -> assignmentlist .)
    IF              reduce using rule 5 (instruction -> assignmentlist .)
    CONTINUE        reduce using rule 5 (instruction -> assignmentlist .)
    THEN            reduce using rule 5 (instruction -> assignmentlist .)
    WHILE           reduce using rule 5 (instruction -> assignmentlist .)
    FOR             reduce using rule 5 (instruction -> assignmentlist .)
    RETURN          reduce using rule 5 (instruction -> assignmentlist .)
    BREAK           reduce using rule 5 (instruction -> assignmentlist .)
    $end            reduce using rule 5 (instruction -> assignmentlist .)
    }               reduce using rule 5 (instruction -> assignmentlist .)
    ELSE            reduce using rule 5 (instruction -> assignmentlist .)
    ID              shift and go to state 22

  ! ID              [ reduce using rule 5 (instruction -> assignmentlist .) ]

    assignment                     shift and go to state 25

state 6

    (6) instruction -> ifinstr .

    PRINT           reduce using rule 6 (instruction -> ifinstr .)
    IF              reduce using rule 6 (instruction -> ifinstr .)
    CONTINUE        reduce using rule 6 (instruction -> ifinstr .)
    THEN            reduce using rule 6 (instruction -> ifinstr .)
    WHILE           reduce using rule 6 (instruction -> ifinstr .)
    FOR             reduce using rule 6 (instruction -> ifinstr .)
    RETURN          reduce using rule 6 (instruction -> ifinstr .)
    BREAK           reduce using rule 6 (instruction -> ifinstr .)
    ID              reduce using rule 6 (instruction -> ifinstr .)
    $end            reduce using rule 6 (instruction -> ifinstr .)
    }               reduce using rule 6 (instruction -> ifinstr .)
    ELSE            reduce using rule 6 (instruction -> ifinstr .)


state 7

    (7) instruction -> continueinstr . ;

    ;               shift and go to state 26


state 8

    (8) instruction -> theninstr . ;

    ;               shift and go to state 27


state 9

    (9) instruction -> whileinstr .

    PRINT           reduce using rule 9 (instruction -> whileinstr .)
    IF              reduce using rule 9 (instruction -> whileinstr .)
    CONTINUE        reduce using rule 9 (instruction -> whileinstr .)
    THEN            reduce using rule 9 (instruction -> whileinstr .)
    WHILE           reduce using rule 9 (instruction -> whileinstr .)
    FOR             reduce using rule 9 (instruction -> whileinstr .)
    RETURN          reduce using rule 9 (instruction -> whileinstr .)
    BREAK           reduce using rule 9 (instruction -> whileinstr .)
    ID              reduce using rule 9 (instruction -> whileinstr .)
    $end            reduce using rule 9 (instruction -> whileinstr .)
    }               reduce using rule 9 (instruction -> whileinstr .)
    ELSE            reduce using rule 9 (instruction -> whileinstr .)


state 10

    (10) instruction -> forinstr .

    PRINT           reduce using rule 10 (instruction -> forinstr .)
    IF              reduce using rule 10 (instruction -> forinstr .)
    CONTINUE        reduce using rule 10 (instruction -> forinstr .)
    THEN            reduce using rule 10 (instruction -> forinstr .)
    WHILE           reduce using rule 10 (instruction -> forinstr .)
    FOR             reduce using rule 10 (instruction -> forinstr .)
    RETURN          reduce using rule 10 (instruction -> forinstr .)
    BREAK           reduce using rule 10 (instruction -> forinstr .)
    ID              reduce using rule 10 (instruction -> forinstr .)
    $end            reduce using rule 10 (instruction -> forinstr .)
    }               reduce using rule 10 (instruction -> forinstr .)
    ELSE            reduce using rule 10 (instruction -> forinstr .)


state 11

    (11) instruction -> returninstr . ;

    ;               shift and go to state 28


state 12

    (12) instruction -> breakinstr . ;

    ;               shift and go to state 29


state 13

    (28) printinstr -> PRINT . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 30
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 14

    (14) assignmentlist -> assignment .

    ID              reduce using rule 14 (assignmentlist -> assignment .)
    PRINT           reduce using rule 14 (assignmentlist -> assignment .)
    IF              reduce using rule 14 (assignmentlist -> assignment .)
    CONTINUE        reduce using rule 14 (assignmentlist -> assignment .)
    THEN            reduce using rule 14 (assignmentlist -> assignment .)
    WHILE           reduce using rule 14 (assignmentlist -> assignment .)
    FOR             reduce using rule 14 (assignmentlist -> assignment .)
    RETURN          reduce using rule 14 (assignmentlist -> assignment .)
    BREAK           reduce using rule 14 (assignmentlist -> assignment .)
    $end            reduce using rule 14 (assignmentlist -> assignment .)
    }               reduce using rule 14 (assignmentlist -> assignment .)
    ELSE            reduce using rule 14 (assignmentlist -> assignment .)


state 15

    (21) ifinstr -> IF . ( condition ) groupedinstr
    (22) ifinstr -> IF . ( condition ) groupedinstr ELSE groupedinstr

    (               shift and go to state 46


state 16

    (30) continueinstr -> CONTINUE .

    ;               reduce using rule 30 (continueinstr -> CONTINUE .)


state 17

    (31) theninstr -> THEN .

    ;               reduce using rule 31 (theninstr -> THEN .)


state 18

    (23) whileinstr -> WHILE . ( condition ) groupedinstr

    (               shift and go to state 47


state 19

    (24) forinstr -> FOR . range groupedinstr
    (57) range -> . ID = INTNUM : INTNUM

    ID              shift and go to state 49

    range                          shift and go to state 48

state 20

    (27) returninstr -> RETURN . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 50
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 21

    (29) breakinstr -> BREAK .

    ;               reduce using rule 29 (breakinstr -> BREAK .)


state 22

    (15) assignment -> ID . = expression ;
    (16) assignment -> ID . ADDASSIGN expression ;
    (17) assignment -> ID . SUBASSIGN expression ;
    (18) assignment -> ID . MULASSIGN expression ;
    (19) assignment -> ID . DIVASSIGN expression ;
    (20) assignment -> ID . [ INTNUM , INTNUM ] = value ;

    =               shift and go to state 51
    ADDASSIGN       shift and go to state 52
    SUBASSIGN       shift and go to state 53
    MULASSIGN       shift and go to state 54
    DIVASSIGN       shift and go to state 55
    [               shift and go to state 56


state 23

    (2) instrlist -> instrlist instruction .

    PRINT           reduce using rule 2 (instrlist -> instrlist instruction .)
    IF              reduce using rule 2 (instrlist -> instrlist instruction .)
    CONTINUE        reduce using rule 2 (instrlist -> instrlist instruction .)
    THEN            reduce using rule 2 (instrlist -> instrlist instruction .)
    WHILE           reduce using rule 2 (instrlist -> instrlist instruction .)
    FOR             reduce using rule 2 (instrlist -> instrlist instruction .)
    RETURN          reduce using rule 2 (instrlist -> instrlist instruction .)
    BREAK           reduce using rule 2 (instrlist -> instrlist instruction .)
    ID              reduce using rule 2 (instrlist -> instrlist instruction .)
    $end            reduce using rule 2 (instrlist -> instrlist instruction .)
    }               reduce using rule 2 (instrlist -> instrlist instruction .)


state 24

    (4) instruction -> printinstr ; .

    PRINT           reduce using rule 4 (instruction -> printinstr ; .)
    IF              reduce using rule 4 (instruction -> printinstr ; .)
    CONTINUE        reduce using rule 4 (instruction -> printinstr ; .)
    THEN            reduce using rule 4 (instruction -> printinstr ; .)
    WHILE           reduce using rule 4 (instruction -> printinstr ; .)
    FOR             reduce using rule 4 (instruction -> printinstr ; .)
    RETURN          reduce using rule 4 (instruction -> printinstr ; .)
    BREAK           reduce using rule 4 (instruction -> printinstr ; .)
    ID              reduce using rule 4 (instruction -> printinstr ; .)
    $end            reduce using rule 4 (instruction -> printinstr ; .)
    }               reduce using rule 4 (instruction -> printinstr ; .)
    ELSE            reduce using rule 4 (instruction -> printinstr ; .)


state 25

    (13) assignmentlist -> assignmentlist assignment .

    ID              reduce using rule 13 (assignmentlist -> assignmentlist assignment .)
    PRINT           reduce using rule 13 (assignmentlist -> assignmentlist assignment .)
    IF              reduce using rule 13 (assignmentlist -> assignmentlist assignment .)
    CONTINUE        reduce using rule 13 (assignmentlist -> assignmentlist assignment .)
    THEN            reduce using rule 13 (assignmentlist -> assignmentlist assignment .)
    WHILE           reduce using rule 13 (assignmentlist -> assignmentlist assignment .)
    FOR             reduce using rule 13 (assignmentlist -> assignmentlist assignment .)
    RETURN          reduce using rule 13 (assignmentlist -> assignmentlist assignment .)
    BREAK           reduce using rule 13 (assignmentlist -> assignmentlist assignment .)
    $end            reduce using rule 13 (assignmentlist -> assignmentlist assignment .)
    }               reduce using rule 13 (assignmentlist -> assignmentlist assignment .)
    ELSE            reduce using rule 13 (assignmentlist -> assignmentlist assignment .)


state 26

    (7) instruction -> continueinstr ; .

    PRINT           reduce using rule 7 (instruction -> continueinstr ; .)
    IF              reduce using rule 7 (instruction -> continueinstr ; .)
    CONTINUE        reduce using rule 7 (instruction -> continueinstr ; .)
    THEN            reduce using rule 7 (instruction -> continueinstr ; .)
    WHILE           reduce using rule 7 (instruction -> continueinstr ; .)
    FOR             reduce using rule 7 (instruction -> continueinstr ; .)
    RETURN          reduce using rule 7 (instruction -> continueinstr ; .)
    BREAK           reduce using rule 7 (instruction -> continueinstr ; .)
    ID              reduce using rule 7 (instruction -> continueinstr ; .)
    $end            reduce using rule 7 (instruction -> continueinstr ; .)
    }               reduce using rule 7 (instruction -> continueinstr ; .)
    ELSE            reduce using rule 7 (instruction -> continueinstr ; .)


state 27

    (8) instruction -> theninstr ; .

    PRINT           reduce using rule 8 (instruction -> theninstr ; .)
    IF              reduce using rule 8 (instruction -> theninstr ; .)
    CONTINUE        reduce using rule 8 (instruction -> theninstr ; .)
    THEN            reduce using rule 8 (instruction -> theninstr ; .)
    WHILE           reduce using rule 8 (instruction -> theninstr ; .)
    FOR             reduce using rule 8 (instruction -> theninstr ; .)
    RETURN          reduce using rule 8 (instruction -> theninstr ; .)
    BREAK           reduce using rule 8 (instruction -> theninstr ; .)
    ID              reduce using rule 8 (instruction -> theninstr ; .)
    $end            reduce using rule 8 (instruction -> theninstr ; .)
    }               reduce using rule 8 (instruction -> theninstr ; .)
    ELSE            reduce using rule 8 (instruction -> theninstr ; .)


state 28

    (11) instruction -> returninstr ; .

    PRINT           reduce using rule 11 (instruction -> returninstr ; .)
    IF              reduce using rule 11 (instruction -> returninstr ; .)
    CONTINUE        reduce using rule 11 (instruction -> returninstr ; .)
    THEN            reduce using rule 11 (instruction -> returninstr ; .)
    WHILE           reduce using rule 11 (instruction -> returninstr ; .)
    FOR             reduce using rule 11 (instruction -> returninstr ; .)
    RETURN          reduce using rule 11 (instruction -> returninstr ; .)
    BREAK           reduce using rule 11 (instruction -> returninstr ; .)
    ID              reduce using rule 11 (instruction -> returninstr ; .)
    $end            reduce using rule 11 (instruction -> returninstr ; .)
    }               reduce using rule 11 (instruction -> returninstr ; .)
    ELSE            reduce using rule 11 (instruction -> returninstr ; .)


state 29

    (12) instruction -> breakinstr ; .

    PRINT           reduce using rule 12 (instruction -> breakinstr ; .)
    IF              reduce using rule 12 (instruction -> breakinstr ; .)
    CONTINUE        reduce using rule 12 (instruction -> breakinstr ; .)
    THEN            reduce using rule 12 (instruction -> breakinstr ; .)
    WHILE           reduce using rule 12 (instruction -> breakinstr ; .)
    FOR             reduce using rule 12 (instruction -> breakinstr ; .)
    RETURN          reduce using rule 12 (instruction -> breakinstr ; .)
    BREAK           reduce using rule 12 (instruction -> breakinstr ; .)
    ID              reduce using rule 12 (instruction -> breakinstr ; .)
    $end            reduce using rule 12 (instruction -> breakinstr ; .)
    }               reduce using rule 12 (instruction -> breakinstr ; .)
    ELSE            reduce using rule 12 (instruction -> breakinstr ; .)


state 30

    (28) printinstr -> PRINT expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    ;               reduce using rule 28 (printinstr -> PRINT expression .)
    '               shift and go to state 57
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65
    GREATEREQUAL    shift and go to state 66
    LOWEREQUAL      shift and go to state 67
    NOTEQUAL        shift and go to state 68
    EQUAL           shift and go to state 69
    <               shift and go to state 70
    >               shift and go to state 71


state 31

    (35) expression -> ID .

    '               reduce using rule 35 (expression -> ID .)
    +               reduce using rule 35 (expression -> ID .)
    -               reduce using rule 35 (expression -> ID .)
    *               reduce using rule 35 (expression -> ID .)
    /               reduce using rule 35 (expression -> ID .)
    DOTADD          reduce using rule 35 (expression -> ID .)
    DOTSUB          reduce using rule 35 (expression -> ID .)
    DOTMUL          reduce using rule 35 (expression -> ID .)
    DOTDIV          reduce using rule 35 (expression -> ID .)
    GREATEREQUAL    reduce using rule 35 (expression -> ID .)
    LOWEREQUAL      reduce using rule 35 (expression -> ID .)
    NOTEQUAL        reduce using rule 35 (expression -> ID .)
    EQUAL           reduce using rule 35 (expression -> ID .)
    <               reduce using rule 35 (expression -> ID .)
    >               reduce using rule 35 (expression -> ID .)
    ;               reduce using rule 35 (expression -> ID .)
    )               reduce using rule 35 (expression -> ID .)


state 32

    (36) expression -> condition .

    '               reduce using rule 36 (expression -> condition .)
    +               reduce using rule 36 (expression -> condition .)
    -               reduce using rule 36 (expression -> condition .)
    *               reduce using rule 36 (expression -> condition .)
    /               reduce using rule 36 (expression -> condition .)
    DOTADD          reduce using rule 36 (expression -> condition .)
    DOTSUB          reduce using rule 36 (expression -> condition .)
    DOTMUL          reduce using rule 36 (expression -> condition .)
    DOTDIV          reduce using rule 36 (expression -> condition .)
    GREATEREQUAL    reduce using rule 36 (expression -> condition .)
    LOWEREQUAL      reduce using rule 36 (expression -> condition .)
    NOTEQUAL        reduce using rule 36 (expression -> condition .)
    EQUAL           reduce using rule 36 (expression -> condition .)
    <               reduce using rule 36 (expression -> condition .)
    >               reduce using rule 36 (expression -> condition .)
    ;               reduce using rule 36 (expression -> condition .)
    )               reduce using rule 36 (expression -> condition .)


state 33

    (37) expression -> matrix .

    '               reduce using rule 37 (expression -> matrix .)
    +               reduce using rule 37 (expression -> matrix .)
    -               reduce using rule 37 (expression -> matrix .)
    *               reduce using rule 37 (expression -> matrix .)
    /               reduce using rule 37 (expression -> matrix .)
    DOTADD          reduce using rule 37 (expression -> matrix .)
    DOTSUB          reduce using rule 37 (expression -> matrix .)
    DOTMUL          reduce using rule 37 (expression -> matrix .)
    DOTDIV          reduce using rule 37 (expression -> matrix .)
    GREATEREQUAL    reduce using rule 37 (expression -> matrix .)
    LOWEREQUAL      reduce using rule 37 (expression -> matrix .)
    NOTEQUAL        reduce using rule 37 (expression -> matrix .)
    EQUAL           reduce using rule 37 (expression -> matrix .)
    <               reduce using rule 37 (expression -> matrix .)
    >               reduce using rule 37 (expression -> matrix .)
    ;               reduce using rule 37 (expression -> matrix .)
    )               reduce using rule 37 (expression -> matrix .)


state 34

    (38) expression -> valuelist .
    (58) valuelist -> valuelist . , value

    '               reduce using rule 38 (expression -> valuelist .)
    +               reduce using rule 38 (expression -> valuelist .)
    -               reduce using rule 38 (expression -> valuelist .)
    *               reduce using rule 38 (expression -> valuelist .)
    /               reduce using rule 38 (expression -> valuelist .)
    DOTADD          reduce using rule 38 (expression -> valuelist .)
    DOTSUB          reduce using rule 38 (expression -> valuelist .)
    DOTMUL          reduce using rule 38 (expression -> valuelist .)
    DOTDIV          reduce using rule 38 (expression -> valuelist .)
    GREATEREQUAL    reduce using rule 38 (expression -> valuelist .)
    LOWEREQUAL      reduce using rule 38 (expression -> valuelist .)
    NOTEQUAL        reduce using rule 38 (expression -> valuelist .)
    EQUAL           reduce using rule 38 (expression -> valuelist .)
    <               reduce using rule 38 (expression -> valuelist .)
    >               reduce using rule 38 (expression -> valuelist .)
    ;               reduce using rule 38 (expression -> valuelist .)
    )               reduce using rule 38 (expression -> valuelist .)
    ,               shift and go to state 72


state 35

    (39) expression -> matrixfunction .

    '               reduce using rule 39 (expression -> matrixfunction .)
    +               reduce using rule 39 (expression -> matrixfunction .)
    -               reduce using rule 39 (expression -> matrixfunction .)
    *               reduce using rule 39 (expression -> matrixfunction .)
    /               reduce using rule 39 (expression -> matrixfunction .)
    DOTADD          reduce using rule 39 (expression -> matrixfunction .)
    DOTSUB          reduce using rule 39 (expression -> matrixfunction .)
    DOTMUL          reduce using rule 39 (expression -> matrixfunction .)
    DOTDIV          reduce using rule 39 (expression -> matrixfunction .)
    GREATEREQUAL    reduce using rule 39 (expression -> matrixfunction .)
    LOWEREQUAL      reduce using rule 39 (expression -> matrixfunction .)
    NOTEQUAL        reduce using rule 39 (expression -> matrixfunction .)
    EQUAL           reduce using rule 39 (expression -> matrixfunction .)
    <               reduce using rule 39 (expression -> matrixfunction .)
    >               reduce using rule 39 (expression -> matrixfunction .)
    ;               reduce using rule 39 (expression -> matrixfunction .)
    )               reduce using rule 39 (expression -> matrixfunction .)


state 36

    (40) expression -> - . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 73
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 37

    (42) expression -> ( . expression )
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 74
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 38

    (32) matrix -> [ . matrixline ]
    (33) matrixline -> . matrixline ; valuelist
    (34) matrixline -> . valuelist
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    matrixline                     shift and go to state 75
    valuelist                      shift and go to state 76
    value                          shift and go to state 39

state 39

    (59) valuelist -> value .

    ,               reduce using rule 59 (valuelist -> value .)
    '               reduce using rule 59 (valuelist -> value .)
    +               reduce using rule 59 (valuelist -> value .)
    -               reduce using rule 59 (valuelist -> value .)
    *               reduce using rule 59 (valuelist -> value .)
    /               reduce using rule 59 (valuelist -> value .)
    DOTADD          reduce using rule 59 (valuelist -> value .)
    DOTSUB          reduce using rule 59 (valuelist -> value .)
    DOTMUL          reduce using rule 59 (valuelist -> value .)
    DOTDIV          reduce using rule 59 (valuelist -> value .)
    GREATEREQUAL    reduce using rule 59 (valuelist -> value .)
    LOWEREQUAL      reduce using rule 59 (valuelist -> value .)
    NOTEQUAL        reduce using rule 59 (valuelist -> value .)
    EQUAL           reduce using rule 59 (valuelist -> value .)
    <               reduce using rule 59 (valuelist -> value .)
    >               reduce using rule 59 (valuelist -> value .)
    ;               reduce using rule 59 (valuelist -> value .)
    )               reduce using rule 59 (valuelist -> value .)
    ]               reduce using rule 59 (valuelist -> value .)


state 40

    (60) matrixfunction -> ZEROES . ( INTNUM )

    (               shift and go to state 77


state 41

    (64) value -> INTNUM .

    ,               reduce using rule 64 (value -> INTNUM .)
    '               reduce using rule 64 (value -> INTNUM .)
    +               reduce using rule 64 (value -> INTNUM .)
    -               reduce using rule 64 (value -> INTNUM .)
    *               reduce using rule 64 (value -> INTNUM .)
    /               reduce using rule 64 (value -> INTNUM .)
    DOTADD          reduce using rule 64 (value -> INTNUM .)
    DOTSUB          reduce using rule 64 (value -> INTNUM .)
    DOTMUL          reduce using rule 64 (value -> INTNUM .)
    DOTDIV          reduce using rule 64 (value -> INTNUM .)
    GREATEREQUAL    reduce using rule 64 (value -> INTNUM .)
    LOWEREQUAL      reduce using rule 64 (value -> INTNUM .)
    NOTEQUAL        reduce using rule 64 (value -> INTNUM .)
    EQUAL           reduce using rule 64 (value -> INTNUM .)
    <               reduce using rule 64 (value -> INTNUM .)
    >               reduce using rule 64 (value -> INTNUM .)
    ;               reduce using rule 64 (value -> INTNUM .)
    )               reduce using rule 64 (value -> INTNUM .)
    ]               reduce using rule 64 (value -> INTNUM .)


state 42

    (61) matrixfunction -> ONES . ( INTNUM )

    (               shift and go to state 78


state 43

    (62) matrixfunction -> EYE . ( INTNUM )

    (               shift and go to state 79


state 44

    (63) value -> STRING .

    ,               reduce using rule 63 (value -> STRING .)
    '               reduce using rule 63 (value -> STRING .)
    +               reduce using rule 63 (value -> STRING .)
    -               reduce using rule 63 (value -> STRING .)
    *               reduce using rule 63 (value -> STRING .)
    /               reduce using rule 63 (value -> STRING .)
    DOTADD          reduce using rule 63 (value -> STRING .)
    DOTSUB          reduce using rule 63 (value -> STRING .)
    DOTMUL          reduce using rule 63 (value -> STRING .)
    DOTDIV          reduce using rule 63 (value -> STRING .)
    GREATEREQUAL    reduce using rule 63 (value -> STRING .)
    LOWEREQUAL      reduce using rule 63 (value -> STRING .)
    NOTEQUAL        reduce using rule 63 (value -> STRING .)
    EQUAL           reduce using rule 63 (value -> STRING .)
    <               reduce using rule 63 (value -> STRING .)
    >               reduce using rule 63 (value -> STRING .)
    ;               reduce using rule 63 (value -> STRING .)
    )               reduce using rule 63 (value -> STRING .)
    ]               reduce using rule 63 (value -> STRING .)


state 45

    (65) value -> FLOATNUM .

    ,               reduce using rule 65 (value -> FLOATNUM .)
    '               reduce using rule 65 (value -> FLOATNUM .)
    +               reduce using rule 65 (value -> FLOATNUM .)
    -               reduce using rule 65 (value -> FLOATNUM .)
    *               reduce using rule 65 (value -> FLOATNUM .)
    /               reduce using rule 65 (value -> FLOATNUM .)
    DOTADD          reduce using rule 65 (value -> FLOATNUM .)
    DOTSUB          reduce using rule 65 (value -> FLOATNUM .)
    DOTMUL          reduce using rule 65 (value -> FLOATNUM .)
    DOTDIV          reduce using rule 65 (value -> FLOATNUM .)
    GREATEREQUAL    reduce using rule 65 (value -> FLOATNUM .)
    LOWEREQUAL      reduce using rule 65 (value -> FLOATNUM .)
    NOTEQUAL        reduce using rule 65 (value -> FLOATNUM .)
    EQUAL           reduce using rule 65 (value -> FLOATNUM .)
    <               reduce using rule 65 (value -> FLOATNUM .)
    >               reduce using rule 65 (value -> FLOATNUM .)
    ;               reduce using rule 65 (value -> FLOATNUM .)
    )               reduce using rule 65 (value -> FLOATNUM .)
    ]               reduce using rule 65 (value -> FLOATNUM .)


state 46

    (21) ifinstr -> IF ( . condition ) groupedinstr
    (22) ifinstr -> IF ( . condition ) groupedinstr ELSE groupedinstr
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    condition                      shift and go to state 80
    expression                     shift and go to state 81
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 47

    (23) whileinstr -> WHILE ( . condition ) groupedinstr
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    condition                      shift and go to state 82
    expression                     shift and go to state 81
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 48

    (24) forinstr -> FOR range . groupedinstr
    (25) groupedinstr -> . { instrlist }
    (26) groupedinstr -> . instruction
    (4) instruction -> . printinstr ;
    (5) instruction -> . assignmentlist
    (6) instruction -> . ifinstr
    (7) instruction -> . continueinstr ;
    (8) instruction -> . theninstr ;
    (9) instruction -> . whileinstr
    (10) instruction -> . forinstr
    (11) instruction -> . returninstr ;
    (12) instruction -> . breakinstr ;
    (28) printinstr -> . PRINT expression
    (13) assignmentlist -> . assignmentlist assignment
    (14) assignmentlist -> . assignment
    (21) ifinstr -> . IF ( condition ) groupedinstr
    (22) ifinstr -> . IF ( condition ) groupedinstr ELSE groupedinstr
    (30) continueinstr -> . CONTINUE
    (31) theninstr -> . THEN
    (23) whileinstr -> . WHILE ( condition ) groupedinstr
    (24) forinstr -> . FOR range groupedinstr
    (27) returninstr -> . RETURN expression
    (29) breakinstr -> . BREAK
    (15) assignment -> . ID = expression ;
    (16) assignment -> . ID ADDASSIGN expression ;
    (17) assignment -> . ID SUBASSIGN expression ;
    (18) assignment -> . ID MULASSIGN expression ;
    (19) assignment -> . ID DIVASSIGN expression ;
    (20) assignment -> . ID [ INTNUM , INTNUM ] = value ;

    {               shift and go to state 84
    PRINT           shift and go to state 13
    IF              shift and go to state 15
    CONTINUE        shift and go to state 16
    THEN            shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21
    ID              shift and go to state 22

    groupedinstr                   shift and go to state 83
    instruction                    shift and go to state 85
    printinstr                     shift and go to state 4
    assignmentlist                 shift and go to state 5
    ifinstr                        shift and go to state 6
    continueinstr                  shift and go to state 7
    theninstr                      shift and go to state 8
    whileinstr                     shift and go to state 9
    forinstr                       shift and go to state 10
    returninstr                    shift and go to state 11
    breakinstr                     shift and go to state 12
    assignment                     shift and go to state 14

state 49

    (57) range -> ID . = INTNUM : INTNUM

    =               shift and go to state 86


state 50

    (27) returninstr -> RETURN expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    ;               reduce using rule 27 (returninstr -> RETURN expression .)
    '               shift and go to state 57
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65
    GREATEREQUAL    shift and go to state 66
    LOWEREQUAL      shift and go to state 67
    NOTEQUAL        shift and go to state 68
    EQUAL           shift and go to state 69
    <               shift and go to state 70
    >               shift and go to state 71


state 51

    (15) assignment -> ID = . expression ;
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 87
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 52

    (16) assignment -> ID ADDASSIGN . expression ;
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 88
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 53

    (17) assignment -> ID SUBASSIGN . expression ;
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 89
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 54

    (18) assignment -> ID MULASSIGN . expression ;
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 90
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 55

    (19) assignment -> ID DIVASSIGN . expression ;
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 91
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 56

    (20) assignment -> ID [ . INTNUM , INTNUM ] = value ;

    INTNUM          shift and go to state 92


state 57

    (41) expression -> expression ' .

    '               reduce using rule 41 (expression -> expression ' .)
    +               reduce using rule 41 (expression -> expression ' .)
    -               reduce using rule 41 (expression -> expression ' .)
    *               reduce using rule 41 (expression -> expression ' .)
    /               reduce using rule 41 (expression -> expression ' .)
    DOTADD          reduce using rule 41 (expression -> expression ' .)
    DOTSUB          reduce using rule 41 (expression -> expression ' .)
    DOTMUL          reduce using rule 41 (expression -> expression ' .)
    DOTDIV          reduce using rule 41 (expression -> expression ' .)
    GREATEREQUAL    reduce using rule 41 (expression -> expression ' .)
    LOWEREQUAL      reduce using rule 41 (expression -> expression ' .)
    NOTEQUAL        reduce using rule 41 (expression -> expression ' .)
    EQUAL           reduce using rule 41 (expression -> expression ' .)
    <               reduce using rule 41 (expression -> expression ' .)
    >               reduce using rule 41 (expression -> expression ' .)
    ;               reduce using rule 41 (expression -> expression ' .)
    )               reduce using rule 41 (expression -> expression ' .)


state 58

    (43) expression -> expression + . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 93
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 59

    (44) expression -> expression - . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 94
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 60

    (45) expression -> expression * . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 95
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 61

    (46) expression -> expression / . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 96
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 62

    (47) expression -> expression DOTADD . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 97
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 63

    (48) expression -> expression DOTSUB . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 98
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 64

    (49) expression -> expression DOTMUL . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 99
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 65

    (50) expression -> expression DOTDIV . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 100
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 66

    (51) condition -> expression GREATEREQUAL . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 101
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 67

    (52) condition -> expression LOWEREQUAL . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 102
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 68

    (53) condition -> expression NOTEQUAL . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 103
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 69

    (54) condition -> expression EQUAL . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 104
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 70

    (55) condition -> expression < . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 105
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 71

    (56) condition -> expression > . expression
    (35) expression -> . ID
    (36) expression -> . condition
    (37) expression -> . matrix
    (38) expression -> . valuelist
    (39) expression -> . matrixfunction
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . expression + expression
    (44) expression -> . expression - expression
    (45) expression -> . expression * expression
    (46) expression -> . expression / expression
    (47) expression -> . expression DOTADD expression
    (48) expression -> . expression DOTSUB expression
    (49) expression -> . expression DOTMUL expression
    (50) expression -> . expression DOTDIV expression
    (51) condition -> . expression GREATEREQUAL expression
    (52) condition -> . expression LOWEREQUAL expression
    (53) condition -> . expression NOTEQUAL expression
    (54) condition -> . expression EQUAL expression
    (55) condition -> . expression < expression
    (56) condition -> . expression > expression
    (32) matrix -> . [ matrixline ]
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (60) matrixfunction -> . ZEROES ( INTNUM )
    (61) matrixfunction -> . ONES ( INTNUM )
    (62) matrixfunction -> . EYE ( INTNUM )
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    ID              shift and go to state 31
    -               shift and go to state 36
    (               shift and go to state 37
    [               shift and go to state 38
    ZEROES          shift and go to state 40
    ONES            shift and go to state 42
    EYE             shift and go to state 43
    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    expression                     shift and go to state 106
    condition                      shift and go to state 32
    matrix                         shift and go to state 33
    valuelist                      shift and go to state 34
    matrixfunction                 shift and go to state 35
    value                          shift and go to state 39

state 72

    (58) valuelist -> valuelist , . value
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    value                          shift and go to state 107

state 73

    (40) expression -> - expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 40 (expression -> - expression .)
    +               reduce using rule 40 (expression -> - expression .)
    -               reduce using rule 40 (expression -> - expression .)
    DOTADD          reduce using rule 40 (expression -> - expression .)
    DOTSUB          reduce using rule 40 (expression -> - expression .)
    GREATEREQUAL    reduce using rule 40 (expression -> - expression .)
    LOWEREQUAL      reduce using rule 40 (expression -> - expression .)
    NOTEQUAL        reduce using rule 40 (expression -> - expression .)
    EQUAL           reduce using rule 40 (expression -> - expression .)
    <               reduce using rule 40 (expression -> - expression .)
    >               reduce using rule 40 (expression -> - expression .)
    ;               reduce using rule 40 (expression -> - expression .)
    )               reduce using rule 40 (expression -> - expression .)
    *               shift and go to state 60
    /               shift and go to state 61
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! *               [ reduce using rule 40 (expression -> - expression .) ]
  ! /               [ reduce using rule 40 (expression -> - expression .) ]
  ! DOTMUL          [ reduce using rule 40 (expression -> - expression .) ]
  ! DOTDIV          [ reduce using rule 40 (expression -> - expression .) ]
  ! '               [ shift and go to state 57 ]
  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 74

    (42) expression -> ( expression . )
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    )               shift and go to state 108
    '               shift and go to state 57
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65
    GREATEREQUAL    shift and go to state 66
    LOWEREQUAL      shift and go to state 67
    NOTEQUAL        shift and go to state 68
    EQUAL           shift and go to state 69
    <               shift and go to state 70
    >               shift and go to state 71


state 75

    (32) matrix -> [ matrixline . ]
    (33) matrixline -> matrixline . ; valuelist

    ]               shift and go to state 109
    ;               shift and go to state 110


state 76

    (34) matrixline -> valuelist .
    (58) valuelist -> valuelist . , value

    ]               reduce using rule 34 (matrixline -> valuelist .)
    ;               reduce using rule 34 (matrixline -> valuelist .)
    ,               shift and go to state 72


state 77

    (60) matrixfunction -> ZEROES ( . INTNUM )

    INTNUM          shift and go to state 111


state 78

    (61) matrixfunction -> ONES ( . INTNUM )

    INTNUM          shift and go to state 112


state 79

    (62) matrixfunction -> EYE ( . INTNUM )

    INTNUM          shift and go to state 113


state 80

    (21) ifinstr -> IF ( condition . ) groupedinstr
    (22) ifinstr -> IF ( condition . ) groupedinstr ELSE groupedinstr
    (36) expression -> condition .

    )               shift and go to state 114
    GREATEREQUAL    reduce using rule 36 (expression -> condition .)
    LOWEREQUAL      reduce using rule 36 (expression -> condition .)
    NOTEQUAL        reduce using rule 36 (expression -> condition .)
    EQUAL           reduce using rule 36 (expression -> condition .)
    <               reduce using rule 36 (expression -> condition .)
    >               reduce using rule 36 (expression -> condition .)
    '               reduce using rule 36 (expression -> condition .)
    +               reduce using rule 36 (expression -> condition .)
    -               reduce using rule 36 (expression -> condition .)
    *               reduce using rule 36 (expression -> condition .)
    /               reduce using rule 36 (expression -> condition .)
    DOTADD          reduce using rule 36 (expression -> condition .)
    DOTSUB          reduce using rule 36 (expression -> condition .)
    DOTMUL          reduce using rule 36 (expression -> condition .)
    DOTDIV          reduce using rule 36 (expression -> condition .)


state 81

    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression

    GREATEREQUAL    shift and go to state 66
    LOWEREQUAL      shift and go to state 67
    NOTEQUAL        shift and go to state 68
    EQUAL           shift and go to state 69
    <               shift and go to state 70
    >               shift and go to state 71
    '               shift and go to state 57
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 82

    (23) whileinstr -> WHILE ( condition . ) groupedinstr
    (36) expression -> condition .

    )               shift and go to state 115
    GREATEREQUAL    reduce using rule 36 (expression -> condition .)
    LOWEREQUAL      reduce using rule 36 (expression -> condition .)
    NOTEQUAL        reduce using rule 36 (expression -> condition .)
    EQUAL           reduce using rule 36 (expression -> condition .)
    <               reduce using rule 36 (expression -> condition .)
    >               reduce using rule 36 (expression -> condition .)
    '               reduce using rule 36 (expression -> condition .)
    +               reduce using rule 36 (expression -> condition .)
    -               reduce using rule 36 (expression -> condition .)
    *               reduce using rule 36 (expression -> condition .)
    /               reduce using rule 36 (expression -> condition .)
    DOTADD          reduce using rule 36 (expression -> condition .)
    DOTSUB          reduce using rule 36 (expression -> condition .)
    DOTMUL          reduce using rule 36 (expression -> condition .)
    DOTDIV          reduce using rule 36 (expression -> condition .)


state 83

    (24) forinstr -> FOR range groupedinstr .

    PRINT           reduce using rule 24 (forinstr -> FOR range groupedinstr .)
    IF              reduce using rule 24 (forinstr -> FOR range groupedinstr .)
    CONTINUE        reduce using rule 24 (forinstr -> FOR range groupedinstr .)
    THEN            reduce using rule 24 (forinstr -> FOR range groupedinstr .)
    WHILE           reduce using rule 24 (forinstr -> FOR range groupedinstr .)
    FOR             reduce using rule 24 (forinstr -> FOR range groupedinstr .)
    RETURN          reduce using rule 24 (forinstr -> FOR range groupedinstr .)
    BREAK           reduce using rule 24 (forinstr -> FOR range groupedinstr .)
    ID              reduce using rule 24 (forinstr -> FOR range groupedinstr .)
    $end            reduce using rule 24 (forinstr -> FOR range groupedinstr .)
    }               reduce using rule 24 (forinstr -> FOR range groupedinstr .)
    ELSE            reduce using rule 24 (forinstr -> FOR range groupedinstr .)


state 84

    (25) groupedinstr -> { . instrlist }
    (2) instrlist -> . instrlist instruction
    (3) instrlist -> . instruction
    (4) instruction -> . printinstr ;
    (5) instruction -> . assignmentlist
    (6) instruction -> . ifinstr
    (7) instruction -> . continueinstr ;
    (8) instruction -> . theninstr ;
    (9) instruction -> . whileinstr
    (10) instruction -> . forinstr
    (11) instruction -> . returninstr ;
    (12) instruction -> . breakinstr ;
    (28) printinstr -> . PRINT expression
    (13) assignmentlist -> . assignmentlist assignment
    (14) assignmentlist -> . assignment
    (21) ifinstr -> . IF ( condition ) groupedinstr
    (22) ifinstr -> . IF ( condition ) groupedinstr ELSE groupedinstr
    (30) continueinstr -> . CONTINUE
    (31) theninstr -> . THEN
    (23) whileinstr -> . WHILE ( condition ) groupedinstr
    (24) forinstr -> . FOR range groupedinstr
    (27) returninstr -> . RETURN expression
    (29) breakinstr -> . BREAK
    (15) assignment -> . ID = expression ;
    (16) assignment -> . ID ADDASSIGN expression ;
    (17) assignment -> . ID SUBASSIGN expression ;
    (18) assignment -> . ID MULASSIGN expression ;
    (19) assignment -> . ID DIVASSIGN expression ;
    (20) assignment -> . ID [ INTNUM , INTNUM ] = value ;

    PRINT           shift and go to state 13
    IF              shift and go to state 15
    CONTINUE        shift and go to state 16
    THEN            shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21
    ID              shift and go to state 22

    instrlist                      shift and go to state 116
    instruction                    shift and go to state 3
    printinstr                     shift and go to state 4
    assignmentlist                 shift and go to state 5
    ifinstr                        shift and go to state 6
    continueinstr                  shift and go to state 7
    theninstr                      shift and go to state 8
    whileinstr                     shift and go to state 9
    forinstr                       shift and go to state 10
    returninstr                    shift and go to state 11
    breakinstr                     shift and go to state 12
    assignment                     shift and go to state 14

state 85

    (26) groupedinstr -> instruction .

    PRINT           reduce using rule 26 (groupedinstr -> instruction .)
    IF              reduce using rule 26 (groupedinstr -> instruction .)
    CONTINUE        reduce using rule 26 (groupedinstr -> instruction .)
    THEN            reduce using rule 26 (groupedinstr -> instruction .)
    WHILE           reduce using rule 26 (groupedinstr -> instruction .)
    FOR             reduce using rule 26 (groupedinstr -> instruction .)
    RETURN          reduce using rule 26 (groupedinstr -> instruction .)
    BREAK           reduce using rule 26 (groupedinstr -> instruction .)
    ID              reduce using rule 26 (groupedinstr -> instruction .)
    $end            reduce using rule 26 (groupedinstr -> instruction .)
    }               reduce using rule 26 (groupedinstr -> instruction .)
    ELSE            reduce using rule 26 (groupedinstr -> instruction .)


state 86

    (57) range -> ID = . INTNUM : INTNUM

    INTNUM          shift and go to state 117


state 87

    (15) assignment -> ID = expression . ;
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    ;               shift and go to state 118
    '               shift and go to state 57
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65
    GREATEREQUAL    shift and go to state 66
    LOWEREQUAL      shift and go to state 67
    NOTEQUAL        shift and go to state 68
    EQUAL           shift and go to state 69
    <               shift and go to state 70
    >               shift and go to state 71


state 88

    (16) assignment -> ID ADDASSIGN expression . ;
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    ;               shift and go to state 119
    '               shift and go to state 57
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65
    GREATEREQUAL    shift and go to state 66
    LOWEREQUAL      shift and go to state 67
    NOTEQUAL        shift and go to state 68
    EQUAL           shift and go to state 69
    <               shift and go to state 70
    >               shift and go to state 71


state 89

    (17) assignment -> ID SUBASSIGN expression . ;
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    ;               shift and go to state 120
    '               shift and go to state 57
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65
    GREATEREQUAL    shift and go to state 66
    LOWEREQUAL      shift and go to state 67
    NOTEQUAL        shift and go to state 68
    EQUAL           shift and go to state 69
    <               shift and go to state 70
    >               shift and go to state 71


state 90

    (18) assignment -> ID MULASSIGN expression . ;
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    ;               shift and go to state 121
    '               shift and go to state 57
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65
    GREATEREQUAL    shift and go to state 66
    LOWEREQUAL      shift and go to state 67
    NOTEQUAL        shift and go to state 68
    EQUAL           shift and go to state 69
    <               shift and go to state 70
    >               shift and go to state 71


state 91

    (19) assignment -> ID DIVASSIGN expression . ;
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    ;               shift and go to state 122
    '               shift and go to state 57
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65
    GREATEREQUAL    shift and go to state 66
    LOWEREQUAL      shift and go to state 67
    NOTEQUAL        shift and go to state 68
    EQUAL           shift and go to state 69
    <               shift and go to state 70
    >               shift and go to state 71


state 92

    (20) assignment -> ID [ INTNUM . , INTNUM ] = value ;

    ,               shift and go to state 123


state 93

    (43) expression -> expression + expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 43 (expression -> expression + expression .)
    +               reduce using rule 43 (expression -> expression + expression .)
    -               reduce using rule 43 (expression -> expression + expression .)
    DOTADD          reduce using rule 43 (expression -> expression + expression .)
    DOTSUB          reduce using rule 43 (expression -> expression + expression .)
    GREATEREQUAL    reduce using rule 43 (expression -> expression + expression .)
    LOWEREQUAL      reduce using rule 43 (expression -> expression + expression .)
    NOTEQUAL        reduce using rule 43 (expression -> expression + expression .)
    EQUAL           reduce using rule 43 (expression -> expression + expression .)
    <               reduce using rule 43 (expression -> expression + expression .)
    >               reduce using rule 43 (expression -> expression + expression .)
    ;               reduce using rule 43 (expression -> expression + expression .)
    )               reduce using rule 43 (expression -> expression + expression .)
    *               shift and go to state 60
    /               shift and go to state 61
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! *               [ reduce using rule 43 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 43 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 43 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 43 (expression -> expression + expression .) ]
  ! '               [ shift and go to state 57 ]
  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 94

    (44) expression -> expression - expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 44 (expression -> expression - expression .)
    +               reduce using rule 44 (expression -> expression - expression .)
    -               reduce using rule 44 (expression -> expression - expression .)
    DOTADD          reduce using rule 44 (expression -> expression - expression .)
    DOTSUB          reduce using rule 44 (expression -> expression - expression .)
    GREATEREQUAL    reduce using rule 44 (expression -> expression - expression .)
    LOWEREQUAL      reduce using rule 44 (expression -> expression - expression .)
    NOTEQUAL        reduce using rule 44 (expression -> expression - expression .)
    EQUAL           reduce using rule 44 (expression -> expression - expression .)
    <               reduce using rule 44 (expression -> expression - expression .)
    >               reduce using rule 44 (expression -> expression - expression .)
    ;               reduce using rule 44 (expression -> expression - expression .)
    )               reduce using rule 44 (expression -> expression - expression .)
    *               shift and go to state 60
    /               shift and go to state 61
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! *               [ reduce using rule 44 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 44 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 44 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 44 (expression -> expression - expression .) ]
  ! '               [ shift and go to state 57 ]
  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 95

    (45) expression -> expression * expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 45 (expression -> expression * expression .)
    +               reduce using rule 45 (expression -> expression * expression .)
    -               reduce using rule 45 (expression -> expression * expression .)
    *               reduce using rule 45 (expression -> expression * expression .)
    /               reduce using rule 45 (expression -> expression * expression .)
    DOTADD          reduce using rule 45 (expression -> expression * expression .)
    DOTSUB          reduce using rule 45 (expression -> expression * expression .)
    DOTMUL          reduce using rule 45 (expression -> expression * expression .)
    DOTDIV          reduce using rule 45 (expression -> expression * expression .)
    GREATEREQUAL    reduce using rule 45 (expression -> expression * expression .)
    LOWEREQUAL      reduce using rule 45 (expression -> expression * expression .)
    NOTEQUAL        reduce using rule 45 (expression -> expression * expression .)
    EQUAL           reduce using rule 45 (expression -> expression * expression .)
    <               reduce using rule 45 (expression -> expression * expression .)
    >               reduce using rule 45 (expression -> expression * expression .)
    ;               reduce using rule 45 (expression -> expression * expression .)
    )               reduce using rule 45 (expression -> expression * expression .)

  ! '               [ shift and go to state 57 ]
  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! *               [ shift and go to state 60 ]
  ! /               [ shift and go to state 61 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]
  ! DOTMUL          [ shift and go to state 64 ]
  ! DOTDIV          [ shift and go to state 65 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 96

    (46) expression -> expression / expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 46 (expression -> expression / expression .)
    +               reduce using rule 46 (expression -> expression / expression .)
    -               reduce using rule 46 (expression -> expression / expression .)
    *               reduce using rule 46 (expression -> expression / expression .)
    /               reduce using rule 46 (expression -> expression / expression .)
    DOTADD          reduce using rule 46 (expression -> expression / expression .)
    DOTSUB          reduce using rule 46 (expression -> expression / expression .)
    DOTMUL          reduce using rule 46 (expression -> expression / expression .)
    DOTDIV          reduce using rule 46 (expression -> expression / expression .)
    GREATEREQUAL    reduce using rule 46 (expression -> expression / expression .)
    LOWEREQUAL      reduce using rule 46 (expression -> expression / expression .)
    NOTEQUAL        reduce using rule 46 (expression -> expression / expression .)
    EQUAL           reduce using rule 46 (expression -> expression / expression .)
    <               reduce using rule 46 (expression -> expression / expression .)
    >               reduce using rule 46 (expression -> expression / expression .)
    ;               reduce using rule 46 (expression -> expression / expression .)
    )               reduce using rule 46 (expression -> expression / expression .)

  ! '               [ shift and go to state 57 ]
  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! *               [ shift and go to state 60 ]
  ! /               [ shift and go to state 61 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]
  ! DOTMUL          [ shift and go to state 64 ]
  ! DOTDIV          [ shift and go to state 65 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 97

    (47) expression -> expression DOTADD expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 47 (expression -> expression DOTADD expression .)
    +               reduce using rule 47 (expression -> expression DOTADD expression .)
    -               reduce using rule 47 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 47 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 47 (expression -> expression DOTADD expression .)
    GREATEREQUAL    reduce using rule 47 (expression -> expression DOTADD expression .)
    LOWEREQUAL      reduce using rule 47 (expression -> expression DOTADD expression .)
    NOTEQUAL        reduce using rule 47 (expression -> expression DOTADD expression .)
    EQUAL           reduce using rule 47 (expression -> expression DOTADD expression .)
    <               reduce using rule 47 (expression -> expression DOTADD expression .)
    >               reduce using rule 47 (expression -> expression DOTADD expression .)
    ;               reduce using rule 47 (expression -> expression DOTADD expression .)
    )               reduce using rule 47 (expression -> expression DOTADD expression .)
    *               shift and go to state 60
    /               shift and go to state 61
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! *               [ reduce using rule 47 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 47 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 47 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 47 (expression -> expression DOTADD expression .) ]
  ! '               [ shift and go to state 57 ]
  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 98

    (48) expression -> expression DOTSUB expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 48 (expression -> expression DOTSUB expression .)
    +               reduce using rule 48 (expression -> expression DOTSUB expression .)
    -               reduce using rule 48 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 48 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 48 (expression -> expression DOTSUB expression .)
    GREATEREQUAL    reduce using rule 48 (expression -> expression DOTSUB expression .)
    LOWEREQUAL      reduce using rule 48 (expression -> expression DOTSUB expression .)
    NOTEQUAL        reduce using rule 48 (expression -> expression DOTSUB expression .)
    EQUAL           reduce using rule 48 (expression -> expression DOTSUB expression .)
    <               reduce using rule 48 (expression -> expression DOTSUB expression .)
    >               reduce using rule 48 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 48 (expression -> expression DOTSUB expression .)
    )               reduce using rule 48 (expression -> expression DOTSUB expression .)
    *               shift and go to state 60
    /               shift and go to state 61
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! *               [ reduce using rule 48 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 48 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 48 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 48 (expression -> expression DOTSUB expression .) ]
  ! '               [ shift and go to state 57 ]
  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 99

    (49) expression -> expression DOTMUL expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 49 (expression -> expression DOTMUL expression .)
    +               reduce using rule 49 (expression -> expression DOTMUL expression .)
    -               reduce using rule 49 (expression -> expression DOTMUL expression .)
    *               reduce using rule 49 (expression -> expression DOTMUL expression .)
    /               reduce using rule 49 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 49 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 49 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 49 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 49 (expression -> expression DOTMUL expression .)
    GREATEREQUAL    reduce using rule 49 (expression -> expression DOTMUL expression .)
    LOWEREQUAL      reduce using rule 49 (expression -> expression DOTMUL expression .)
    NOTEQUAL        reduce using rule 49 (expression -> expression DOTMUL expression .)
    EQUAL           reduce using rule 49 (expression -> expression DOTMUL expression .)
    <               reduce using rule 49 (expression -> expression DOTMUL expression .)
    >               reduce using rule 49 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 49 (expression -> expression DOTMUL expression .)
    )               reduce using rule 49 (expression -> expression DOTMUL expression .)

  ! '               [ shift and go to state 57 ]
  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! *               [ shift and go to state 60 ]
  ! /               [ shift and go to state 61 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]
  ! DOTMUL          [ shift and go to state 64 ]
  ! DOTDIV          [ shift and go to state 65 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 100

    (50) expression -> expression DOTDIV expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 50 (expression -> expression DOTDIV expression .)
    +               reduce using rule 50 (expression -> expression DOTDIV expression .)
    -               reduce using rule 50 (expression -> expression DOTDIV expression .)
    *               reduce using rule 50 (expression -> expression DOTDIV expression .)
    /               reduce using rule 50 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 50 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 50 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 50 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 50 (expression -> expression DOTDIV expression .)
    GREATEREQUAL    reduce using rule 50 (expression -> expression DOTDIV expression .)
    LOWEREQUAL      reduce using rule 50 (expression -> expression DOTDIV expression .)
    NOTEQUAL        reduce using rule 50 (expression -> expression DOTDIV expression .)
    EQUAL           reduce using rule 50 (expression -> expression DOTDIV expression .)
    <               reduce using rule 50 (expression -> expression DOTDIV expression .)
    >               reduce using rule 50 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 50 (expression -> expression DOTDIV expression .)
    )               reduce using rule 50 (expression -> expression DOTDIV expression .)

  ! '               [ shift and go to state 57 ]
  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! *               [ shift and go to state 60 ]
  ! /               [ shift and go to state 61 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]
  ! DOTMUL          [ shift and go to state 64 ]
  ! DOTDIV          [ shift and go to state 65 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 101

    (51) condition -> expression GREATEREQUAL expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 51 (condition -> expression GREATEREQUAL expression .)
    GREATEREQUAL    reduce using rule 51 (condition -> expression GREATEREQUAL expression .)
    LOWEREQUAL      reduce using rule 51 (condition -> expression GREATEREQUAL expression .)
    NOTEQUAL        reduce using rule 51 (condition -> expression GREATEREQUAL expression .)
    EQUAL           reduce using rule 51 (condition -> expression GREATEREQUAL expression .)
    <               reduce using rule 51 (condition -> expression GREATEREQUAL expression .)
    >               reduce using rule 51 (condition -> expression GREATEREQUAL expression .)
    ;               reduce using rule 51 (condition -> expression GREATEREQUAL expression .)
    )               reduce using rule 51 (condition -> expression GREATEREQUAL expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! +               [ reduce using rule 51 (condition -> expression GREATEREQUAL expression .) ]
  ! -               [ reduce using rule 51 (condition -> expression GREATEREQUAL expression .) ]
  ! *               [ reduce using rule 51 (condition -> expression GREATEREQUAL expression .) ]
  ! /               [ reduce using rule 51 (condition -> expression GREATEREQUAL expression .) ]
  ! DOTADD          [ reduce using rule 51 (condition -> expression GREATEREQUAL expression .) ]
  ! DOTSUB          [ reduce using rule 51 (condition -> expression GREATEREQUAL expression .) ]
  ! DOTMUL          [ reduce using rule 51 (condition -> expression GREATEREQUAL expression .) ]
  ! DOTDIV          [ reduce using rule 51 (condition -> expression GREATEREQUAL expression .) ]
  ! '               [ shift and go to state 57 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 102

    (52) condition -> expression LOWEREQUAL expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 52 (condition -> expression LOWEREQUAL expression .)
    GREATEREQUAL    reduce using rule 52 (condition -> expression LOWEREQUAL expression .)
    LOWEREQUAL      reduce using rule 52 (condition -> expression LOWEREQUAL expression .)
    NOTEQUAL        reduce using rule 52 (condition -> expression LOWEREQUAL expression .)
    EQUAL           reduce using rule 52 (condition -> expression LOWEREQUAL expression .)
    <               reduce using rule 52 (condition -> expression LOWEREQUAL expression .)
    >               reduce using rule 52 (condition -> expression LOWEREQUAL expression .)
    ;               reduce using rule 52 (condition -> expression LOWEREQUAL expression .)
    )               reduce using rule 52 (condition -> expression LOWEREQUAL expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! +               [ reduce using rule 52 (condition -> expression LOWEREQUAL expression .) ]
  ! -               [ reduce using rule 52 (condition -> expression LOWEREQUAL expression .) ]
  ! *               [ reduce using rule 52 (condition -> expression LOWEREQUAL expression .) ]
  ! /               [ reduce using rule 52 (condition -> expression LOWEREQUAL expression .) ]
  ! DOTADD          [ reduce using rule 52 (condition -> expression LOWEREQUAL expression .) ]
  ! DOTSUB          [ reduce using rule 52 (condition -> expression LOWEREQUAL expression .) ]
  ! DOTMUL          [ reduce using rule 52 (condition -> expression LOWEREQUAL expression .) ]
  ! DOTDIV          [ reduce using rule 52 (condition -> expression LOWEREQUAL expression .) ]
  ! '               [ shift and go to state 57 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 103

    (53) condition -> expression NOTEQUAL expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 53 (condition -> expression NOTEQUAL expression .)
    GREATEREQUAL    reduce using rule 53 (condition -> expression NOTEQUAL expression .)
    LOWEREQUAL      reduce using rule 53 (condition -> expression NOTEQUAL expression .)
    NOTEQUAL        reduce using rule 53 (condition -> expression NOTEQUAL expression .)
    EQUAL           reduce using rule 53 (condition -> expression NOTEQUAL expression .)
    <               reduce using rule 53 (condition -> expression NOTEQUAL expression .)
    >               reduce using rule 53 (condition -> expression NOTEQUAL expression .)
    ;               reduce using rule 53 (condition -> expression NOTEQUAL expression .)
    )               reduce using rule 53 (condition -> expression NOTEQUAL expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! +               [ reduce using rule 53 (condition -> expression NOTEQUAL expression .) ]
  ! -               [ reduce using rule 53 (condition -> expression NOTEQUAL expression .) ]
  ! *               [ reduce using rule 53 (condition -> expression NOTEQUAL expression .) ]
  ! /               [ reduce using rule 53 (condition -> expression NOTEQUAL expression .) ]
  ! DOTADD          [ reduce using rule 53 (condition -> expression NOTEQUAL expression .) ]
  ! DOTSUB          [ reduce using rule 53 (condition -> expression NOTEQUAL expression .) ]
  ! DOTMUL          [ reduce using rule 53 (condition -> expression NOTEQUAL expression .) ]
  ! DOTDIV          [ reduce using rule 53 (condition -> expression NOTEQUAL expression .) ]
  ! '               [ shift and go to state 57 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 104

    (54) condition -> expression EQUAL expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 54 (condition -> expression EQUAL expression .)
    GREATEREQUAL    reduce using rule 54 (condition -> expression EQUAL expression .)
    LOWEREQUAL      reduce using rule 54 (condition -> expression EQUAL expression .)
    NOTEQUAL        reduce using rule 54 (condition -> expression EQUAL expression .)
    EQUAL           reduce using rule 54 (condition -> expression EQUAL expression .)
    <               reduce using rule 54 (condition -> expression EQUAL expression .)
    >               reduce using rule 54 (condition -> expression EQUAL expression .)
    ;               reduce using rule 54 (condition -> expression EQUAL expression .)
    )               reduce using rule 54 (condition -> expression EQUAL expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! +               [ reduce using rule 54 (condition -> expression EQUAL expression .) ]
  ! -               [ reduce using rule 54 (condition -> expression EQUAL expression .) ]
  ! *               [ reduce using rule 54 (condition -> expression EQUAL expression .) ]
  ! /               [ reduce using rule 54 (condition -> expression EQUAL expression .) ]
  ! DOTADD          [ reduce using rule 54 (condition -> expression EQUAL expression .) ]
  ! DOTSUB          [ reduce using rule 54 (condition -> expression EQUAL expression .) ]
  ! DOTMUL          [ reduce using rule 54 (condition -> expression EQUAL expression .) ]
  ! DOTDIV          [ reduce using rule 54 (condition -> expression EQUAL expression .) ]
  ! '               [ shift and go to state 57 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 105

    (55) condition -> expression < expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 55 (condition -> expression < expression .)
    GREATEREQUAL    reduce using rule 55 (condition -> expression < expression .)
    LOWEREQUAL      reduce using rule 55 (condition -> expression < expression .)
    NOTEQUAL        reduce using rule 55 (condition -> expression < expression .)
    EQUAL           reduce using rule 55 (condition -> expression < expression .)
    <               reduce using rule 55 (condition -> expression < expression .)
    >               reduce using rule 55 (condition -> expression < expression .)
    ;               reduce using rule 55 (condition -> expression < expression .)
    )               reduce using rule 55 (condition -> expression < expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! +               [ reduce using rule 55 (condition -> expression < expression .) ]
  ! -               [ reduce using rule 55 (condition -> expression < expression .) ]
  ! *               [ reduce using rule 55 (condition -> expression < expression .) ]
  ! /               [ reduce using rule 55 (condition -> expression < expression .) ]
  ! DOTADD          [ reduce using rule 55 (condition -> expression < expression .) ]
  ! DOTSUB          [ reduce using rule 55 (condition -> expression < expression .) ]
  ! DOTMUL          [ reduce using rule 55 (condition -> expression < expression .) ]
  ! DOTDIV          [ reduce using rule 55 (condition -> expression < expression .) ]
  ! '               [ shift and go to state 57 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 106

    (56) condition -> expression > expression .
    (41) expression -> expression . '
    (43) expression -> expression . + expression
    (44) expression -> expression . - expression
    (45) expression -> expression . * expression
    (46) expression -> expression . / expression
    (47) expression -> expression . DOTADD expression
    (48) expression -> expression . DOTSUB expression
    (49) expression -> expression . DOTMUL expression
    (50) expression -> expression . DOTDIV expression
    (51) condition -> expression . GREATEREQUAL expression
    (52) condition -> expression . LOWEREQUAL expression
    (53) condition -> expression . NOTEQUAL expression
    (54) condition -> expression . EQUAL expression
    (55) condition -> expression . < expression
    (56) condition -> expression . > expression

    '               reduce using rule 56 (condition -> expression > expression .)
    GREATEREQUAL    reduce using rule 56 (condition -> expression > expression .)
    LOWEREQUAL      reduce using rule 56 (condition -> expression > expression .)
    NOTEQUAL        reduce using rule 56 (condition -> expression > expression .)
    EQUAL           reduce using rule 56 (condition -> expression > expression .)
    <               reduce using rule 56 (condition -> expression > expression .)
    >               reduce using rule 56 (condition -> expression > expression .)
    ;               reduce using rule 56 (condition -> expression > expression .)
    )               reduce using rule 56 (condition -> expression > expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! +               [ reduce using rule 56 (condition -> expression > expression .) ]
  ! -               [ reduce using rule 56 (condition -> expression > expression .) ]
  ! *               [ reduce using rule 56 (condition -> expression > expression .) ]
  ! /               [ reduce using rule 56 (condition -> expression > expression .) ]
  ! DOTADD          [ reduce using rule 56 (condition -> expression > expression .) ]
  ! DOTSUB          [ reduce using rule 56 (condition -> expression > expression .) ]
  ! DOTMUL          [ reduce using rule 56 (condition -> expression > expression .) ]
  ! DOTDIV          [ reduce using rule 56 (condition -> expression > expression .) ]
  ! '               [ shift and go to state 57 ]
  ! GREATEREQUAL    [ shift and go to state 66 ]
  ! LOWEREQUAL      [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]
  ! EQUAL           [ shift and go to state 69 ]
  ! <               [ shift and go to state 70 ]
  ! >               [ shift and go to state 71 ]


state 107

    (58) valuelist -> valuelist , value .

    ,               reduce using rule 58 (valuelist -> valuelist , value .)
    '               reduce using rule 58 (valuelist -> valuelist , value .)
    +               reduce using rule 58 (valuelist -> valuelist , value .)
    -               reduce using rule 58 (valuelist -> valuelist , value .)
    *               reduce using rule 58 (valuelist -> valuelist , value .)
    /               reduce using rule 58 (valuelist -> valuelist , value .)
    DOTADD          reduce using rule 58 (valuelist -> valuelist , value .)
    DOTSUB          reduce using rule 58 (valuelist -> valuelist , value .)
    DOTMUL          reduce using rule 58 (valuelist -> valuelist , value .)
    DOTDIV          reduce using rule 58 (valuelist -> valuelist , value .)
    GREATEREQUAL    reduce using rule 58 (valuelist -> valuelist , value .)
    LOWEREQUAL      reduce using rule 58 (valuelist -> valuelist , value .)
    NOTEQUAL        reduce using rule 58 (valuelist -> valuelist , value .)
    EQUAL           reduce using rule 58 (valuelist -> valuelist , value .)
    <               reduce using rule 58 (valuelist -> valuelist , value .)
    >               reduce using rule 58 (valuelist -> valuelist , value .)
    ;               reduce using rule 58 (valuelist -> valuelist , value .)
    )               reduce using rule 58 (valuelist -> valuelist , value .)
    ]               reduce using rule 58 (valuelist -> valuelist , value .)


state 108

    (42) expression -> ( expression ) .

    '               reduce using rule 42 (expression -> ( expression ) .)
    +               reduce using rule 42 (expression -> ( expression ) .)
    -               reduce using rule 42 (expression -> ( expression ) .)
    *               reduce using rule 42 (expression -> ( expression ) .)
    /               reduce using rule 42 (expression -> ( expression ) .)
    DOTADD          reduce using rule 42 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 42 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 42 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 42 (expression -> ( expression ) .)
    GREATEREQUAL    reduce using rule 42 (expression -> ( expression ) .)
    LOWEREQUAL      reduce using rule 42 (expression -> ( expression ) .)
    NOTEQUAL        reduce using rule 42 (expression -> ( expression ) .)
    EQUAL           reduce using rule 42 (expression -> ( expression ) .)
    <               reduce using rule 42 (expression -> ( expression ) .)
    >               reduce using rule 42 (expression -> ( expression ) .)
    ;               reduce using rule 42 (expression -> ( expression ) .)
    )               reduce using rule 42 (expression -> ( expression ) .)


state 109

    (32) matrix -> [ matrixline ] .

    '               reduce using rule 32 (matrix -> [ matrixline ] .)
    +               reduce using rule 32 (matrix -> [ matrixline ] .)
    -               reduce using rule 32 (matrix -> [ matrixline ] .)
    *               reduce using rule 32 (matrix -> [ matrixline ] .)
    /               reduce using rule 32 (matrix -> [ matrixline ] .)
    DOTADD          reduce using rule 32 (matrix -> [ matrixline ] .)
    DOTSUB          reduce using rule 32 (matrix -> [ matrixline ] .)
    DOTMUL          reduce using rule 32 (matrix -> [ matrixline ] .)
    DOTDIV          reduce using rule 32 (matrix -> [ matrixline ] .)
    GREATEREQUAL    reduce using rule 32 (matrix -> [ matrixline ] .)
    LOWEREQUAL      reduce using rule 32 (matrix -> [ matrixline ] .)
    NOTEQUAL        reduce using rule 32 (matrix -> [ matrixline ] .)
    EQUAL           reduce using rule 32 (matrix -> [ matrixline ] .)
    <               reduce using rule 32 (matrix -> [ matrixline ] .)
    >               reduce using rule 32 (matrix -> [ matrixline ] .)
    ;               reduce using rule 32 (matrix -> [ matrixline ] .)
    )               reduce using rule 32 (matrix -> [ matrixline ] .)


state 110

    (33) matrixline -> matrixline ; . valuelist
    (58) valuelist -> . valuelist , value
    (59) valuelist -> . value
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    valuelist                      shift and go to state 124
    value                          shift and go to state 39

state 111

    (60) matrixfunction -> ZEROES ( INTNUM . )

    )               shift and go to state 125


state 112

    (61) matrixfunction -> ONES ( INTNUM . )

    )               shift and go to state 126


state 113

    (62) matrixfunction -> EYE ( INTNUM . )

    )               shift and go to state 127


state 114

    (21) ifinstr -> IF ( condition ) . groupedinstr
    (22) ifinstr -> IF ( condition ) . groupedinstr ELSE groupedinstr
    (25) groupedinstr -> . { instrlist }
    (26) groupedinstr -> . instruction
    (4) instruction -> . printinstr ;
    (5) instruction -> . assignmentlist
    (6) instruction -> . ifinstr
    (7) instruction -> . continueinstr ;
    (8) instruction -> . theninstr ;
    (9) instruction -> . whileinstr
    (10) instruction -> . forinstr
    (11) instruction -> . returninstr ;
    (12) instruction -> . breakinstr ;
    (28) printinstr -> . PRINT expression
    (13) assignmentlist -> . assignmentlist assignment
    (14) assignmentlist -> . assignment
    (21) ifinstr -> . IF ( condition ) groupedinstr
    (22) ifinstr -> . IF ( condition ) groupedinstr ELSE groupedinstr
    (30) continueinstr -> . CONTINUE
    (31) theninstr -> . THEN
    (23) whileinstr -> . WHILE ( condition ) groupedinstr
    (24) forinstr -> . FOR range groupedinstr
    (27) returninstr -> . RETURN expression
    (29) breakinstr -> . BREAK
    (15) assignment -> . ID = expression ;
    (16) assignment -> . ID ADDASSIGN expression ;
    (17) assignment -> . ID SUBASSIGN expression ;
    (18) assignment -> . ID MULASSIGN expression ;
    (19) assignment -> . ID DIVASSIGN expression ;
    (20) assignment -> . ID [ INTNUM , INTNUM ] = value ;

    {               shift and go to state 84
    PRINT           shift and go to state 13
    IF              shift and go to state 15
    CONTINUE        shift and go to state 16
    THEN            shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21
    ID              shift and go to state 22

    groupedinstr                   shift and go to state 128
    instruction                    shift and go to state 85
    printinstr                     shift and go to state 4
    assignmentlist                 shift and go to state 5
    ifinstr                        shift and go to state 6
    continueinstr                  shift and go to state 7
    theninstr                      shift and go to state 8
    whileinstr                     shift and go to state 9
    forinstr                       shift and go to state 10
    returninstr                    shift and go to state 11
    breakinstr                     shift and go to state 12
    assignment                     shift and go to state 14

state 115

    (23) whileinstr -> WHILE ( condition ) . groupedinstr
    (25) groupedinstr -> . { instrlist }
    (26) groupedinstr -> . instruction
    (4) instruction -> . printinstr ;
    (5) instruction -> . assignmentlist
    (6) instruction -> . ifinstr
    (7) instruction -> . continueinstr ;
    (8) instruction -> . theninstr ;
    (9) instruction -> . whileinstr
    (10) instruction -> . forinstr
    (11) instruction -> . returninstr ;
    (12) instruction -> . breakinstr ;
    (28) printinstr -> . PRINT expression
    (13) assignmentlist -> . assignmentlist assignment
    (14) assignmentlist -> . assignment
    (21) ifinstr -> . IF ( condition ) groupedinstr
    (22) ifinstr -> . IF ( condition ) groupedinstr ELSE groupedinstr
    (30) continueinstr -> . CONTINUE
    (31) theninstr -> . THEN
    (23) whileinstr -> . WHILE ( condition ) groupedinstr
    (24) forinstr -> . FOR range groupedinstr
    (27) returninstr -> . RETURN expression
    (29) breakinstr -> . BREAK
    (15) assignment -> . ID = expression ;
    (16) assignment -> . ID ADDASSIGN expression ;
    (17) assignment -> . ID SUBASSIGN expression ;
    (18) assignment -> . ID MULASSIGN expression ;
    (19) assignment -> . ID DIVASSIGN expression ;
    (20) assignment -> . ID [ INTNUM , INTNUM ] = value ;

    {               shift and go to state 84
    PRINT           shift and go to state 13
    IF              shift and go to state 15
    CONTINUE        shift and go to state 16
    THEN            shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21
    ID              shift and go to state 22

    groupedinstr                   shift and go to state 129
    instruction                    shift and go to state 85
    printinstr                     shift and go to state 4
    assignmentlist                 shift and go to state 5
    ifinstr                        shift and go to state 6
    continueinstr                  shift and go to state 7
    theninstr                      shift and go to state 8
    whileinstr                     shift and go to state 9
    forinstr                       shift and go to state 10
    returninstr                    shift and go to state 11
    breakinstr                     shift and go to state 12
    assignment                     shift and go to state 14

state 116

    (25) groupedinstr -> { instrlist . }
    (2) instrlist -> instrlist . instruction
    (4) instruction -> . printinstr ;
    (5) instruction -> . assignmentlist
    (6) instruction -> . ifinstr
    (7) instruction -> . continueinstr ;
    (8) instruction -> . theninstr ;
    (9) instruction -> . whileinstr
    (10) instruction -> . forinstr
    (11) instruction -> . returninstr ;
    (12) instruction -> . breakinstr ;
    (28) printinstr -> . PRINT expression
    (13) assignmentlist -> . assignmentlist assignment
    (14) assignmentlist -> . assignment
    (21) ifinstr -> . IF ( condition ) groupedinstr
    (22) ifinstr -> . IF ( condition ) groupedinstr ELSE groupedinstr
    (30) continueinstr -> . CONTINUE
    (31) theninstr -> . THEN
    (23) whileinstr -> . WHILE ( condition ) groupedinstr
    (24) forinstr -> . FOR range groupedinstr
    (27) returninstr -> . RETURN expression
    (29) breakinstr -> . BREAK
    (15) assignment -> . ID = expression ;
    (16) assignment -> . ID ADDASSIGN expression ;
    (17) assignment -> . ID SUBASSIGN expression ;
    (18) assignment -> . ID MULASSIGN expression ;
    (19) assignment -> . ID DIVASSIGN expression ;
    (20) assignment -> . ID [ INTNUM , INTNUM ] = value ;

    }               shift and go to state 130
    PRINT           shift and go to state 13
    IF              shift and go to state 15
    CONTINUE        shift and go to state 16
    THEN            shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21
    ID              shift and go to state 22

    instruction                    shift and go to state 23
    printinstr                     shift and go to state 4
    assignmentlist                 shift and go to state 5
    ifinstr                        shift and go to state 6
    continueinstr                  shift and go to state 7
    theninstr                      shift and go to state 8
    whileinstr                     shift and go to state 9
    forinstr                       shift and go to state 10
    returninstr                    shift and go to state 11
    breakinstr                     shift and go to state 12
    assignment                     shift and go to state 14

state 117

    (57) range -> ID = INTNUM . : INTNUM

    :               shift and go to state 131


state 118

    (15) assignment -> ID = expression ; .

    ID              reduce using rule 15 (assignment -> ID = expression ; .)
    PRINT           reduce using rule 15 (assignment -> ID = expression ; .)
    IF              reduce using rule 15 (assignment -> ID = expression ; .)
    CONTINUE        reduce using rule 15 (assignment -> ID = expression ; .)
    THEN            reduce using rule 15 (assignment -> ID = expression ; .)
    WHILE           reduce using rule 15 (assignment -> ID = expression ; .)
    FOR             reduce using rule 15 (assignment -> ID = expression ; .)
    RETURN          reduce using rule 15 (assignment -> ID = expression ; .)
    BREAK           reduce using rule 15 (assignment -> ID = expression ; .)
    $end            reduce using rule 15 (assignment -> ID = expression ; .)
    }               reduce using rule 15 (assignment -> ID = expression ; .)
    ELSE            reduce using rule 15 (assignment -> ID = expression ; .)


state 119

    (16) assignment -> ID ADDASSIGN expression ; .

    ID              reduce using rule 16 (assignment -> ID ADDASSIGN expression ; .)
    PRINT           reduce using rule 16 (assignment -> ID ADDASSIGN expression ; .)
    IF              reduce using rule 16 (assignment -> ID ADDASSIGN expression ; .)
    CONTINUE        reduce using rule 16 (assignment -> ID ADDASSIGN expression ; .)
    THEN            reduce using rule 16 (assignment -> ID ADDASSIGN expression ; .)
    WHILE           reduce using rule 16 (assignment -> ID ADDASSIGN expression ; .)
    FOR             reduce using rule 16 (assignment -> ID ADDASSIGN expression ; .)
    RETURN          reduce using rule 16 (assignment -> ID ADDASSIGN expression ; .)
    BREAK           reduce using rule 16 (assignment -> ID ADDASSIGN expression ; .)
    $end            reduce using rule 16 (assignment -> ID ADDASSIGN expression ; .)
    }               reduce using rule 16 (assignment -> ID ADDASSIGN expression ; .)
    ELSE            reduce using rule 16 (assignment -> ID ADDASSIGN expression ; .)


state 120

    (17) assignment -> ID SUBASSIGN expression ; .

    ID              reduce using rule 17 (assignment -> ID SUBASSIGN expression ; .)
    PRINT           reduce using rule 17 (assignment -> ID SUBASSIGN expression ; .)
    IF              reduce using rule 17 (assignment -> ID SUBASSIGN expression ; .)
    CONTINUE        reduce using rule 17 (assignment -> ID SUBASSIGN expression ; .)
    THEN            reduce using rule 17 (assignment -> ID SUBASSIGN expression ; .)
    WHILE           reduce using rule 17 (assignment -> ID SUBASSIGN expression ; .)
    FOR             reduce using rule 17 (assignment -> ID SUBASSIGN expression ; .)
    RETURN          reduce using rule 17 (assignment -> ID SUBASSIGN expression ; .)
    BREAK           reduce using rule 17 (assignment -> ID SUBASSIGN expression ; .)
    $end            reduce using rule 17 (assignment -> ID SUBASSIGN expression ; .)
    }               reduce using rule 17 (assignment -> ID SUBASSIGN expression ; .)
    ELSE            reduce using rule 17 (assignment -> ID SUBASSIGN expression ; .)


state 121

    (18) assignment -> ID MULASSIGN expression ; .

    ID              reduce using rule 18 (assignment -> ID MULASSIGN expression ; .)
    PRINT           reduce using rule 18 (assignment -> ID MULASSIGN expression ; .)
    IF              reduce using rule 18 (assignment -> ID MULASSIGN expression ; .)
    CONTINUE        reduce using rule 18 (assignment -> ID MULASSIGN expression ; .)
    THEN            reduce using rule 18 (assignment -> ID MULASSIGN expression ; .)
    WHILE           reduce using rule 18 (assignment -> ID MULASSIGN expression ; .)
    FOR             reduce using rule 18 (assignment -> ID MULASSIGN expression ; .)
    RETURN          reduce using rule 18 (assignment -> ID MULASSIGN expression ; .)
    BREAK           reduce using rule 18 (assignment -> ID MULASSIGN expression ; .)
    $end            reduce using rule 18 (assignment -> ID MULASSIGN expression ; .)
    }               reduce using rule 18 (assignment -> ID MULASSIGN expression ; .)
    ELSE            reduce using rule 18 (assignment -> ID MULASSIGN expression ; .)


state 122

    (19) assignment -> ID DIVASSIGN expression ; .

    ID              reduce using rule 19 (assignment -> ID DIVASSIGN expression ; .)
    PRINT           reduce using rule 19 (assignment -> ID DIVASSIGN expression ; .)
    IF              reduce using rule 19 (assignment -> ID DIVASSIGN expression ; .)
    CONTINUE        reduce using rule 19 (assignment -> ID DIVASSIGN expression ; .)
    THEN            reduce using rule 19 (assignment -> ID DIVASSIGN expression ; .)
    WHILE           reduce using rule 19 (assignment -> ID DIVASSIGN expression ; .)
    FOR             reduce using rule 19 (assignment -> ID DIVASSIGN expression ; .)
    RETURN          reduce using rule 19 (assignment -> ID DIVASSIGN expression ; .)
    BREAK           reduce using rule 19 (assignment -> ID DIVASSIGN expression ; .)
    $end            reduce using rule 19 (assignment -> ID DIVASSIGN expression ; .)
    }               reduce using rule 19 (assignment -> ID DIVASSIGN expression ; .)
    ELSE            reduce using rule 19 (assignment -> ID DIVASSIGN expression ; .)


state 123

    (20) assignment -> ID [ INTNUM , . INTNUM ] = value ;

    INTNUM          shift and go to state 132


state 124

    (33) matrixline -> matrixline ; valuelist .
    (58) valuelist -> valuelist . , value

    ]               reduce using rule 33 (matrixline -> matrixline ; valuelist .)
    ;               reduce using rule 33 (matrixline -> matrixline ; valuelist .)
    ,               shift and go to state 72


state 125

    (60) matrixfunction -> ZEROES ( INTNUM ) .

    '               reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    +               reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    -               reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    *               reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    /               reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    DOTADD          reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    DOTSUB          reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    DOTMUL          reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    DOTDIV          reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    GREATEREQUAL    reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    LOWEREQUAL      reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    NOTEQUAL        reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    EQUAL           reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    <               reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    >               reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    ;               reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)
    )               reduce using rule 60 (matrixfunction -> ZEROES ( INTNUM ) .)


state 126

    (61) matrixfunction -> ONES ( INTNUM ) .

    '               reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    +               reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    -               reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    *               reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    /               reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    DOTADD          reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    DOTSUB          reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    DOTMUL          reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    DOTDIV          reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    GREATEREQUAL    reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    LOWEREQUAL      reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    NOTEQUAL        reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    EQUAL           reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    <               reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    >               reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    ;               reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)
    )               reduce using rule 61 (matrixfunction -> ONES ( INTNUM ) .)


state 127

    (62) matrixfunction -> EYE ( INTNUM ) .

    '               reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    +               reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    -               reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    *               reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    /               reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    DOTADD          reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    DOTSUB          reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    DOTMUL          reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    DOTDIV          reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    GREATEREQUAL    reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    LOWEREQUAL      reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    NOTEQUAL        reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    EQUAL           reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    <               reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    >               reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    ;               reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)
    )               reduce using rule 62 (matrixfunction -> EYE ( INTNUM ) .)


state 128

    (21) ifinstr -> IF ( condition ) groupedinstr .
    (22) ifinstr -> IF ( condition ) groupedinstr . ELSE groupedinstr

  ! shift/reduce conflict for ELSE resolved as shift
    PRINT           reduce using rule 21 (ifinstr -> IF ( condition ) groupedinstr .)
    IF              reduce using rule 21 (ifinstr -> IF ( condition ) groupedinstr .)
    CONTINUE        reduce using rule 21 (ifinstr -> IF ( condition ) groupedinstr .)
    THEN            reduce using rule 21 (ifinstr -> IF ( condition ) groupedinstr .)
    WHILE           reduce using rule 21 (ifinstr -> IF ( condition ) groupedinstr .)
    FOR             reduce using rule 21 (ifinstr -> IF ( condition ) groupedinstr .)
    RETURN          reduce using rule 21 (ifinstr -> IF ( condition ) groupedinstr .)
    BREAK           reduce using rule 21 (ifinstr -> IF ( condition ) groupedinstr .)
    ID              reduce using rule 21 (ifinstr -> IF ( condition ) groupedinstr .)
    $end            reduce using rule 21 (ifinstr -> IF ( condition ) groupedinstr .)
    }               reduce using rule 21 (ifinstr -> IF ( condition ) groupedinstr .)
    ELSE            shift and go to state 133

  ! ELSE            [ reduce using rule 21 (ifinstr -> IF ( condition ) groupedinstr .) ]


state 129

    (23) whileinstr -> WHILE ( condition ) groupedinstr .

    PRINT           reduce using rule 23 (whileinstr -> WHILE ( condition ) groupedinstr .)
    IF              reduce using rule 23 (whileinstr -> WHILE ( condition ) groupedinstr .)
    CONTINUE        reduce using rule 23 (whileinstr -> WHILE ( condition ) groupedinstr .)
    THEN            reduce using rule 23 (whileinstr -> WHILE ( condition ) groupedinstr .)
    WHILE           reduce using rule 23 (whileinstr -> WHILE ( condition ) groupedinstr .)
    FOR             reduce using rule 23 (whileinstr -> WHILE ( condition ) groupedinstr .)
    RETURN          reduce using rule 23 (whileinstr -> WHILE ( condition ) groupedinstr .)
    BREAK           reduce using rule 23 (whileinstr -> WHILE ( condition ) groupedinstr .)
    ID              reduce using rule 23 (whileinstr -> WHILE ( condition ) groupedinstr .)
    $end            reduce using rule 23 (whileinstr -> WHILE ( condition ) groupedinstr .)
    }               reduce using rule 23 (whileinstr -> WHILE ( condition ) groupedinstr .)
    ELSE            reduce using rule 23 (whileinstr -> WHILE ( condition ) groupedinstr .)


state 130

    (25) groupedinstr -> { instrlist } .

    PRINT           reduce using rule 25 (groupedinstr -> { instrlist } .)
    IF              reduce using rule 25 (groupedinstr -> { instrlist } .)
    CONTINUE        reduce using rule 25 (groupedinstr -> { instrlist } .)
    THEN            reduce using rule 25 (groupedinstr -> { instrlist } .)
    WHILE           reduce using rule 25 (groupedinstr -> { instrlist } .)
    FOR             reduce using rule 25 (groupedinstr -> { instrlist } .)
    RETURN          reduce using rule 25 (groupedinstr -> { instrlist } .)
    BREAK           reduce using rule 25 (groupedinstr -> { instrlist } .)
    ID              reduce using rule 25 (groupedinstr -> { instrlist } .)
    $end            reduce using rule 25 (groupedinstr -> { instrlist } .)
    }               reduce using rule 25 (groupedinstr -> { instrlist } .)
    ELSE            reduce using rule 25 (groupedinstr -> { instrlist } .)


state 131

    (57) range -> ID = INTNUM : . INTNUM

    INTNUM          shift and go to state 134


state 132

    (20) assignment -> ID [ INTNUM , INTNUM . ] = value ;

    ]               shift and go to state 135


state 133

    (22) ifinstr -> IF ( condition ) groupedinstr ELSE . groupedinstr
    (25) groupedinstr -> . { instrlist }
    (26) groupedinstr -> . instruction
    (4) instruction -> . printinstr ;
    (5) instruction -> . assignmentlist
    (6) instruction -> . ifinstr
    (7) instruction -> . continueinstr ;
    (8) instruction -> . theninstr ;
    (9) instruction -> . whileinstr
    (10) instruction -> . forinstr
    (11) instruction -> . returninstr ;
    (12) instruction -> . breakinstr ;
    (28) printinstr -> . PRINT expression
    (13) assignmentlist -> . assignmentlist assignment
    (14) assignmentlist -> . assignment
    (21) ifinstr -> . IF ( condition ) groupedinstr
    (22) ifinstr -> . IF ( condition ) groupedinstr ELSE groupedinstr
    (30) continueinstr -> . CONTINUE
    (31) theninstr -> . THEN
    (23) whileinstr -> . WHILE ( condition ) groupedinstr
    (24) forinstr -> . FOR range groupedinstr
    (27) returninstr -> . RETURN expression
    (29) breakinstr -> . BREAK
    (15) assignment -> . ID = expression ;
    (16) assignment -> . ID ADDASSIGN expression ;
    (17) assignment -> . ID SUBASSIGN expression ;
    (18) assignment -> . ID MULASSIGN expression ;
    (19) assignment -> . ID DIVASSIGN expression ;
    (20) assignment -> . ID [ INTNUM , INTNUM ] = value ;

    {               shift and go to state 84
    PRINT           shift and go to state 13
    IF              shift and go to state 15
    CONTINUE        shift and go to state 16
    THEN            shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21
    ID              shift and go to state 22

    groupedinstr                   shift and go to state 136
    instruction                    shift and go to state 85
    printinstr                     shift and go to state 4
    assignmentlist                 shift and go to state 5
    ifinstr                        shift and go to state 6
    continueinstr                  shift and go to state 7
    theninstr                      shift and go to state 8
    whileinstr                     shift and go to state 9
    forinstr                       shift and go to state 10
    returninstr                    shift and go to state 11
    breakinstr                     shift and go to state 12
    assignment                     shift and go to state 14

state 134

    (57) range -> ID = INTNUM : INTNUM .

    {               reduce using rule 57 (range -> ID = INTNUM : INTNUM .)
    PRINT           reduce using rule 57 (range -> ID = INTNUM : INTNUM .)
    IF              reduce using rule 57 (range -> ID = INTNUM : INTNUM .)
    CONTINUE        reduce using rule 57 (range -> ID = INTNUM : INTNUM .)
    THEN            reduce using rule 57 (range -> ID = INTNUM : INTNUM .)
    WHILE           reduce using rule 57 (range -> ID = INTNUM : INTNUM .)
    FOR             reduce using rule 57 (range -> ID = INTNUM : INTNUM .)
    RETURN          reduce using rule 57 (range -> ID = INTNUM : INTNUM .)
    BREAK           reduce using rule 57 (range -> ID = INTNUM : INTNUM .)
    ID              reduce using rule 57 (range -> ID = INTNUM : INTNUM .)


state 135

    (20) assignment -> ID [ INTNUM , INTNUM ] . = value ;

    =               shift and go to state 137


state 136

    (22) ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr .

    PRINT           reduce using rule 22 (ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr .)
    IF              reduce using rule 22 (ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr .)
    CONTINUE        reduce using rule 22 (ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr .)
    THEN            reduce using rule 22 (ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr .)
    WHILE           reduce using rule 22 (ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr .)
    FOR             reduce using rule 22 (ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr .)
    RETURN          reduce using rule 22 (ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr .)
    BREAK           reduce using rule 22 (ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr .)
    ID              reduce using rule 22 (ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr .)
    $end            reduce using rule 22 (ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr .)
    }               reduce using rule 22 (ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr .)
    ELSE            reduce using rule 22 (ifinstr -> IF ( condition ) groupedinstr ELSE groupedinstr .)


state 137

    (20) assignment -> ID [ INTNUM , INTNUM ] = . value ;
    (63) value -> . STRING
    (64) value -> . INTNUM
    (65) value -> . FLOATNUM

    STRING          shift and go to state 44
    INTNUM          shift and go to state 41
    FLOATNUM        shift and go to state 45

    value                          shift and go to state 138

state 138

    (20) assignment -> ID [ INTNUM , INTNUM ] = value . ;

    ;               shift and go to state 139


state 139

    (20) assignment -> ID [ INTNUM , INTNUM ] = value ; .

    ID              reduce using rule 20 (assignment -> ID [ INTNUM , INTNUM ] = value ; .)
    PRINT           reduce using rule 20 (assignment -> ID [ INTNUM , INTNUM ] = value ; .)
    IF              reduce using rule 20 (assignment -> ID [ INTNUM , INTNUM ] = value ; .)
    CONTINUE        reduce using rule 20 (assignment -> ID [ INTNUM , INTNUM ] = value ; .)
    THEN            reduce using rule 20 (assignment -> ID [ INTNUM , INTNUM ] = value ; .)
    WHILE           reduce using rule 20 (assignment -> ID [ INTNUM , INTNUM ] = value ; .)
    FOR             reduce using rule 20 (assignment -> ID [ INTNUM , INTNUM ] = value ; .)
    RETURN          reduce using rule 20 (assignment -> ID [ INTNUM , INTNUM ] = value ; .)
    BREAK           reduce using rule 20 (assignment -> ID [ INTNUM , INTNUM ] = value ; .)
    $end            reduce using rule 20 (assignment -> ID [ INTNUM , INTNUM ] = value ; .)
    }               reduce using rule 20 (assignment -> ID [ INTNUM , INTNUM ] = value ; .)
    ELSE            reduce using rule 20 (assignment -> ID [ INTNUM , INTNUM ] = value ; .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 5 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 128 resolved as shift
